#set(${className} = ${fileName})
package ${package};

import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import org.hibernate.annotations.GenericGenerator;
#foreach(${explicitImportedJavaType} in ${table.explicitImportedJavaTypes})
	import ${explicitImportedJavaType}
#end

@Entity
@Table(name = "${table.name}")
public class ${className} {	
	#foreach(${column} in ${table.columns})
		
		#if(${column.primaryKey})
		@Id
		#end
		#if(${column.generatedKey})
			#set(${columnGeneratedKeyName} = ${table.name.toLowerCase()} + '_' + ${column.name.toLowerCase()} + '_gen_key')
			@GeneratedValue(generator = "${columnGeneratedKeyName}")
			@GenericGenerator(name="${columnGeneratedKeyName}", strategy="${column.generatedKeyStrategy}"#if($StringUtils.isNotEmpty($column.generatedKeyParameters)), parameters=${column.generatedKeyParameters}#end)
		#end
		@Column(name="${column.name}", nullable = ${column.nullable}#if(${column.javaType.string}), length = ${column.length}#end#if(${column.javaType.decimal}), precision = ${column.length}, scale=${column.scale}#end)
		private ${column.javaType.shortName} ${column.uncapitalizedCamelCaseName};
	#end
	#foreach(${column} in ${table.columns})
		
		public ${column.javaType.shortName} get${column.capitalizedCamelCaseName}() {
			return ${column.uncapitalizedCamelCaseName};
		}
	#end
	#foreach(${column} in ${table.columns})
		
		public void set${column.capitalizedCamelCaseName}(${column.javaType.shortName} ${column.uncapitalizedCamelCaseName}) {
			this.${column.uncapitalizedCamelCaseName} = ${column.uncapitalizedCamelCaseName};
		}
	#end
     
}
